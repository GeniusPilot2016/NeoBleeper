//------------------------------------------------------------------------------
// <auto-generated>
//     Bu kod araç tarafından oluşturuldu.
//     Çalışma Zamanı Sürümü:4.0.30319.42000
//
//     Bu dosyada yapılacak değişiklikler yanlış davranışa neden olabilir ve
//     kod yeniden oluşturulursa kaybolur.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NeoBleeper.Properties {
    using System;
    
    
    /// <summary>
    ///   Yerelleştirilmiş dizeleri aramak gibi işlemler için, türü kesin olarak belirtilmiş kaynak sınıfı.
    /// </summary>
    // Bu sınıf ResGen veya Visual Studio gibi bir araç kullanılarak StronglyTypedResourceBuilder
    // sınıfı tarafından otomatik olarak oluşturuldu.
    // Üye eklemek veya kaldırmak için .ResX dosyanızı düzenleyin ve sonra da ResGen
    // komutunu /str seçeneğiyle yeniden çalıştırın veya VS projenizi yeniden oluşturun.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Bu sınıf tarafından kullanılan, önbelleğe alınmış ResourceManager örneğini döndürür.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NeoBleeper.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Tümü için geçerli iş parçacığının CurrentUICulture özelliğini geçersiz kular
        ///   CurrentUICulture özelliğini tüm kaynak aramaları için geçersiz kılar.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   An error occurred while running the application:
        /// benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string AnErrorOccuredWhileRunningApplication {
            get {
                return ResourceManager.GetString("AnErrorOccuredWhileRunningApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This feature disables the automatic updating of the position table when playing the music. However, it will continue to update during editing. 
        ///
        ///When enabled, the position table will not update when the music is playing.
        ///
        ///If you are experiencing problems with fluidity or skipping while playing the music in the list, it is recommended that you disable this option. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string DoNotUpdateHelp {
            get {
                return ResourceManager.GetString("DoNotUpdateHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do Not Update Beat Indicators benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string DoNotUpdateHelpTitle {
            get {
                return ResourceManager.GetString("DoNotUpdateHelpTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error resetting API key:  benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ErrorResettingAPIKey {
            get {
                return ResourceManager.GetString("ErrorResettingAPIKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error saving API key:  benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ErrorSavingAPIKey {
            get {
                return ResourceManager.GetString("ErrorSavingAPIKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Create a classical music piece in the style of Beethoven benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExamplePrompt1 {
            get {
                return ResourceManager.GetString("ExamplePrompt1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Generate a folk tune with acoustic guitar benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExamplePrompt10 {
            get {
                return ResourceManager.GetString("ExamplePrompt10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Generate a rock song inspired by The Beatles benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExamplePrompt2 {
            get {
                return ResourceManager.GetString("ExamplePrompt2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compose a jazz melody with a swing rhythm benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExamplePrompt3 {
            get {
                return ResourceManager.GetString("ExamplePrompt3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Write a relaxing piano solo benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExamplePrompt4 {
            get {
                return ResourceManager.GetString("ExamplePrompt4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Make an electronic dance track with a fast tempo benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExamplePrompt5 {
            get {
                return ResourceManager.GetString("ExamplePrompt5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Generate a lullaby for children benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExamplePrompt6 {
            get {
                return ResourceManager.GetString("ExamplePrompt6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Compose a soundtrack for a fantasy game benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExamplePrompt7 {
            get {
                return ResourceManager.GetString("ExamplePrompt7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Create a pop song with catchy melodies benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExamplePrompt8 {
            get {
                return ResourceManager.GetString("ExamplePrompt8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Write a blues progression in E major benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ExamplePrompt9 {
            get {
                return ResourceManager.GetString("ExamplePrompt9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Google Gemini™ API is not available in your country. Please check the list of supported countries. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string GoogleGeminiAPIIsNotSupportedInYourCountry {
            get {
                return ResourceManager.GetString("GoogleGeminiAPIIsNotSupportedInYourCountry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The API key format is invalid. Please check and try again. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string GoogleGeminiAPIKeyFormatInvalid {
            get {
                return ResourceManager.GetString("GoogleGeminiAPIKeyFormatInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Google Gemini™ API key reset successfully. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string GoogleGeminiAPIKeyReset {
            get {
                return ResourceManager.GetString("GoogleGeminiAPIKeyReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Google Gemini™ API key saved successfully. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string GoogleGeminiAPIKeySaved {
            get {
                return ResourceManager.GetString("GoogleGeminiAPIKeySaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Google Gemini™ server is currently unreachable. Please try again later. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string GoogleGeminiServerDown {
            get {
                return ResourceManager.GetString("GoogleGeminiServerDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   System.Byte[] türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static byte[] HarmonyOS_Sans_Black {
            get {
                object obj = ResourceManager.GetObject("HarmonyOS_Sans_Black", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   System.Byte[] türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static byte[] HarmonyOS_Sans_Black_Italic {
            get {
                object obj = ResourceManager.GetObject("HarmonyOS_Sans_Black_Italic", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   System.Byte[] türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static byte[] HarmonyOS_Sans_Bold {
            get {
                object obj = ResourceManager.GetObject("HarmonyOS_Sans_Bold", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   System.Byte[] türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static byte[] HarmonyOS_Sans_Bold_Italic {
            get {
                object obj = ResourceManager.GetObject("HarmonyOS_Sans_Bold_Italic", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   System.Byte[] türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static byte[] HarmonyOS_Sans_Light {
            get {
                object obj = ResourceManager.GetObject("HarmonyOS_Sans_Light", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   System.Byte[] türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static byte[] HarmonyOS_Sans_Light_Italic {
            get {
                object obj = ResourceManager.GetObject("HarmonyOS_Sans_Light_Italic", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   System.Byte[] türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static byte[] HarmonyOS_Sans_Medium {
            get {
                object obj = ResourceManager.GetObject("HarmonyOS_Sans_Medium", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   System.Byte[] türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static byte[] HarmonyOS_Sans_Medium_Italic {
            get {
                object obj = ResourceManager.GetObject("HarmonyOS_Sans_Medium_Italic", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   System.Byte[] türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static byte[] HarmonyOS_Sans_Regular {
            get {
                object obj = ResourceManager.GetObject("HarmonyOS_Sans_Regular", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   System.Byte[] türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static byte[] HarmonyOS_Sans_Regular_Italic {
            get {
                object obj = ResourceManager.GetObject("HarmonyOS_Sans_Regular_Italic", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   System.Byte[] türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static byte[] HarmonyOS_Sans_Thin {
            get {
                object obj = ResourceManager.GetObject("HarmonyOS_Sans_Thin", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   System.Byte[] türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static byte[] HarmonyOS_Sans_Thin_Italic {
            get {
                object obj = ResourceManager.GetObject("HarmonyOS_Sans_Thin_Italic", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Hide the API key in the API key field.
        ///Click again to show it. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string HideAPIKeyToolTip {
            get {
                return ResourceManager.GetString("HideAPIKeyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_1_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-1-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_2_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-2-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_3_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-3-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_3d_printer_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-3d-printer-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_4_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-4-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_ai_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-ai-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_artificial_intelligence_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-artificial-intelligence-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_check_all_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-check-all-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_clear_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-clear-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_clock_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-clock-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_close_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-close-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_copy_to_clipboard_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-copy-to-clipboard-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_cut_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-cut-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_eraser_tool_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-eraser-tool-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_error_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-error-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_help_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-help-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_laptop_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-laptop-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_line_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-line-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_mute_48__1_ {
            get {
                object obj = ResourceManager.GetObject("icons8-mute-48 (1)", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_new_file_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-new-file-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_open_file_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-open-file-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_paste_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-paste-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_pause_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-pause-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_play_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-play-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_play_property_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-play-property-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_playlist_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-playlist-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_processor_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-processor-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_question_mark_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-question-mark-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_redo_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-redo-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_resolution_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-resolution-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_rewind_button_round_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-rewind-button-round-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_save_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-save-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_select_none_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-select-none-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_sustainable_energy_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-sustainable-energy-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_uncheck_all_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-uncheck-all-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_undo_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-undo-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_wait_96 {
            get {
                object obj = ResourceManager.GetObject("icons8-wait-96", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap icons8_warning_48 {
            get {
                object obj = ResourceManager.GetObject("icons8-warning-48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Example text benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string LyricsExampleText {
            get {
                return ResourceManager.GetString("LyricsExampleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   AI music creation failed: benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageAIMusicCreationFailed {
            get {
                return ResourceManager.GetString("MessageAIMusicCreationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   AI response is null or empty. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageAIResponseNullOrEmpty {
            get {
                return ResourceManager.GetString("MessageAIResponseNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An error occurred: benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageAnErrorOccured {
            get {
                return ResourceManager.GetString("MessageAnErrorOccured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NeoBleeper has detected that your Google Gemini™ API key is corrupted. Please re-enter your Google Gemini™ API key in the settings window. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageAPIKeyIsCorrupted {
            get {
                return ResourceManager.GetString("MessageAPIKeyIsCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Google Gemini™ API key is not set. Please set the API key in the &quot;General&quot; tab in settings. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageAPIKeyIsNotSet {
            get {
                return ResourceManager.GetString("MessageAPIKeyIsNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error converting to GCode: benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageConvertToGCodeError {
            get {
                return ResourceManager.GetString("MessageConvertToGCodeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The file you dragged is corrupted or the file is in use by another process. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageCorruptedOrCurrentlyUsedFile {
            get {
                return ResourceManager.GetString("MessageCorruptedOrCurrentlyUsedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error closing the form:  benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageErrorClosingForm {
            get {
                return ResourceManager.GetString("MessageErrorClosingForm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error opening file: benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageErrorFileOpening {
            get {
                return ResourceManager.GetString("MessageErrorFileOpening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error rewinding to saved version: benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageErrorRewinding {
            get {
                return ResourceManager.GetString("MessageErrorRewinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error saving NeoBleeper file: benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageErrorSavingFile {
            get {
                return ResourceManager.GetString("MessageErrorSavingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The file is not found: benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageFileNotFoundError {
            get {
                return ResourceManager.GetString("MessageFileNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Empty note list cannot be exported. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageGCodeEmptyNoteList {
            get {
                return ResourceManager.GetString("MessageGCodeEmptyNoteList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   GCode file exported successfully! benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageGCodeExported {
            get {
                return ResourceManager.GetString("MessageGCodeExported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Google Gemini™ API key format is invalid. Please re-enter the API key in the &quot;General&quot; tab in settings. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageGoogleGeminiAPIKeyFormatIsInvalid {
            get {
                return ResourceManager.GetString("MessageGoogleGeminiAPIKeyFormatIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Invalid or corrupted music file benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageInvalidOrCorruptedMusicFile {
            get {
                return ResourceManager.GetString("MessageInvalidOrCorruptedMusicFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The language has been changed. Please restart the application to apply the new language. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageLanguageChanged {
            get {
                return ResourceManager.GetString("MessageLanguageChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error loading MIDI file: benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageMIDIFileLoadingError {
            get {
                return ResourceManager.GetString("MessageMIDIFileLoadingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The file you dragged is not supported by NeoBleeper MIDI player or is corrupted. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageMIDIFilePlayerNonSupportedFile {
            get {
                return ResourceManager.GetString("MessageMIDIFilePlayerNonSupportedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Internet connection is not available. Please check your connection. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageNoInternet {
            get {
                return ResourceManager.GetString("MessageNoInternet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This Bleeper Music Maker file contains invalid elements that do not comply with the syntax of Bleeper Music Maker file format. 
        ///
        ///Do you want to open this file anyway? benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageNonStandardBleeperMusicMakerFile {
            get {
                return ResourceManager.GetString("MessageNonStandardBleeperMusicMakerFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This NeoBleeper file contains invalid elements that do not comply with the syntax of NeoBleeper file format.
        ///
        ///Do you want to open this file anyway? benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageNonStandardNeoBleeperFile {
            get {
                return ResourceManager.GetString("MessageNonStandardNeoBleeperFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The file you dragged is not supported by NeoBleeper or is corrupted. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageNonSupportedFile {
            get {
                return ResourceManager.GetString("MessageNonSupportedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This file is not a valid MIDI file, or it is corrupted or is being used by another process. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageNonValidMIDIFile {
            get {
                return ResourceManager.GetString("MessageNonValidMIDIFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No saved version to rewind to. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageNoSavedVersion {
            get {
                return ResourceManager.GetString("MessageNoSavedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error starting playback: benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessagePlaybackStartingError {
            get {
                return ResourceManager.GetString("MessagePlaybackStartingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cannot start MIDI input device: benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageStartMIDIInputDeviceError {
            get {
                return ResourceManager.GetString("MessageStartMIDIInputDeviceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Try refreshing the device list. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MessageStartMIDIInputDeviceErrorPart2 {
            get {
                return ResourceManager.GetString("MessageStartMIDIInputDeviceErrorPart2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   MIDI Device Error benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MIDIDeviceErrorTitle {
            get {
                return ResourceManager.GetString("MIDIDeviceErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The MIDI file player cannot be opened when &quot;Mute playback&quot; checkbox is checked and &quot;Use MIDI output&quot; checkbox is unchecked.
        ///
        ///Please check &quot;Use MIDI output&quot; checkbox from &quot;Devices&quot; tab in settings or uncheck &quot;Mute playback&quot; checkbox to use this feature. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string MIDIFilePlayerMutedError {
            get {
                return ResourceManager.GetString("MIDIFilePlayerMutedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap neobleeper_background_dark {
            get {
                object obj = ResourceManager.GetObject("neobleeper_background_dark", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap neobleeper_background_light {
            get {
                object obj = ResourceManager.GetObject("neobleeper_background_light", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap neobleeper_icon {
            get {
                object obj = ResourceManager.GetObject("neobleeper_icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   System.Drawing.Bitmap türünde yerelleştirilmiş bir kaynak arar.
        /// </summary>
        public static System.Drawing.Bitmap neobleeper_pattern {
            get {
                object obj = ResourceManager.GetObject("neobleeper_pattern", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   This feature allows you to play beat like sounds from system speaker/sound device. 
        ///
        ///You can choose the sound to play by clicking the &apos;Change Beat Sound&apos; button. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string PlayBeatSoundHelp {
            get {
                return ResourceManager.GetString("PlayBeatSoundHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Play a Beat Sound benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string PlayBeatSoundHelpTitle {
            get {
                return ResourceManager.GetString("PlayBeatSoundHelpTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Only for the case where music is played in real time on the keyboard. 
        ///
        ///This feature makes the system speaker/sound device increase or decrease in pitch to the note that you clicked. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string PortamentoHelp {
            get {
                return ResourceManager.GetString("PortamentoHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bleeper Portamento benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string PortamentoHelpTitle {
            get {
                return ResourceManager.GetString("PortamentoHelpTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show the API key in the API key field.
        ///Click again to hide it. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ShowAPIKeyToolTip {
            get {
                return ResourceManager.GetString("ShowAPIKeyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This feature allows you to synchronize the playback of multiple instances of NeoBleeper. 
        ///It can also run on multiple computers and still start playing at the same time, as long as all of their clocks are set correctly. 
        ///
        ///Therefore, it is recommended to synchronize your clock before using this feature. You can synchronize the clocks of multiple computers using the Set time zone automatically, Set time automatically, and Sync now buttons, which are available in Settings &gt; Time &amp; Language &gt; Date &amp; Time. 
        /// [dizenin kalan bölümü kesildi]&quot;; benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string SynchronizedPlayHelp {
            get {
                return ResourceManager.GetString("SynchronizedPlayHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Synchronized Play benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string SynchronizedPlayHelpTitle {
            get {
                return ResourceManager.GetString("SynchronizedPlayHelpTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   (Error) benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextBeatError {
            get {
                return ResourceManager.GetString("TextBeatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Currently not waiting benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextCurrentlyNotWaiting {
            get {
                return ResourceManager.GetString("TextCurrentlyNotWaiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Currently waiting benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextCurrentlyWaiting {
            get {
                return ResourceManager.GetString("TextCurrentlyWaiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextError {
            get {
                return ResourceManager.GetString("TextError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Events are being collected... benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextEventsAreBeingCollected {
            get {
                return ResourceManager.GetString("TextEventsAreBeingCollected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Events are being sorted... benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextEventsAreBeingSorted {
            get {
                return ResourceManager.GetString("TextEventsAreBeingSorted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Frames are being created... benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextFramesAreBeingCreated {
            get {
                return ResourceManager.GetString("TextFramesAreBeingCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hide benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextHide {
            get {
                return ResourceManager.GetString("TextHide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notes which are currently being held on: benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextHoldedNotes {
            get {
                return ResourceManager.GetString("TextHoldedNotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   MIDI events are being collected... benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextMIDIEventsAreBeingCollected {
            get {
                return ResourceManager.GetString("TextMIDIEventsAreBeingCollected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   MIDI file loaded successfully. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextMIDIFileLoaded {
            get {
                return ResourceManager.GetString("TextMIDIFileLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An error occurred while loading the MIDI file. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextMIDIFileLoadingError {
            get {
                return ResourceManager.GetString("TextMIDIFileLoadingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   (Not Found) benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextNotFound {
            get {
                return ResourceManager.GetString("TextNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Playing benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextPlaying {
            get {
                return ResourceManager.GetString("TextPlaying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Position: benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextPosition {
            get {
                return ResourceManager.GetString("TextPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextShow {
            get {
                return ResourceManager.GetString("TextShow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start waiting benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextStartWaiting {
            get {
                return ResourceManager.GetString("TextStartWaiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stop playing benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextStopPlaying {
            get {
                return ResourceManager.GetString("TextStopPlaying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stop waiting benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextStopWaiting {
            get {
                return ResourceManager.GetString("TextStopWaiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The MIDI file is being loaded... benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string TextTheMIDIFileIsBeingLoaded {
            get {
                return ResourceManager.GetString("TextTheMIDIFileIsBeingLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notes are copied to clipboard. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ToastMessageNotesCopy {
            get {
                return ResourceManager.GetString("ToastMessageNotesCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Notes are cut to clipboard. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string ToastMessageNotesCut {
            get {
                return ResourceManager.GetString("ToastMessageNotesCut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This feature allows you to use your computer keyboard as a piano keyboard. 
        ///
        ///When enabled, you can play notes by pressing the corresponding keys on your keyboard without any MIDI devices. 
        ///
        ///You can see the key mappings in the buttons in the top of the window. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string UseKeyboardAsPianoHelp {
            get {
                return ResourceManager.GetString("UseKeyboardAsPianoHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use Keyboard As Piano benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string UseKeyboardAsPianoHelpTitle {
            get {
                return ResourceManager.GetString("UseKeyboardAsPianoHelpTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This feauture makes the program use voice system to mimic speech formants to make selected notes mimic &quot;singing&quot;. benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string UseVoiceSystemHelp {
            get {
                return ResourceManager.GetString("UseVoiceSystemHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use Voice System benzeri yerelleştirilmiş bir dize arar.
        /// </summary>
        public static string UseVoiceSystemHelpTitle {
            get {
                return ResourceManager.GetString("UseVoiceSystemHelpTitle", resourceCulture);
            }
        }
    }
}
